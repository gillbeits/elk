filter {
  if [type] == "mysql-slow" {
    mutate { gsub => [ "message", '\\"', '""' ] }
    csv {
      columns => [ "start_time", "user_host", "query_time", "lock_time",
                    "rows_sent", "rows_examined", "db", "last_insert_id",
                    "insert_id", "server_id", "sql_text" ]
      # convert various fields to integer
      mutate { convert => [ "rows_sent", "integer" ] }
      mutate { convert => [ "rows_examined", "integer" ] }
      mutate { convert => [ "last_insert_id", "integer" ] }
      mutate { convert => [ "insert_id", "integer" ] }
      mutate { convert => [ "server_id", "integer" ] }

      # convert start_time to @timestamp
      date {
        match => [ "start_time", "YYYY-MM-DD HH:mm:ss" ]
        remove_field => [ "start_time" ]
      }

      # normalize query_time from HH::mm::ss to seconds
      ruby { code => "event['query_time'] = event['query_time'] ? event['query_time'].split(':').inject(0){|a, m| a = a * 60 + m.to_i} : 0" }

      # normalize lock_time from HH:mm:ss to seconds
      ruby { code => "event['lock_time'] = event['lock_time'] ? event['lock_time'].split(':').inject(0){|a, m| a = a * 60 + m.to_i} : 0" }

      # remove original message
      mutate { remove => [ "message" ] }
    }
  }
}
